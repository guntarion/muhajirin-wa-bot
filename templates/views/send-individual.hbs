<div>
    <h1>Kirim From Template - Orang Per Orang</h1>
</div>

<div class="container">
    <form id="broadcastForm">
        <div class="form-group">
            <label for="broadcastNama">Nama Sesi Broadcast:</label>
            <input type="text" id="broadcastNama" class="form-control" required>
        </div>

        <label for="templateList">Daftar Template</label>
        <div class="list-group" id="templateList">
            {{#each templates}}
            <label class="list-group-item mb-0 text-transform-none fw-normal ls-0 text-size-sm font-body">
                <input class="form-check-input me-1" type="radio" name="list-group-radio" value="{{templateName}}"
                    aria-label="...">
                {{templateName}}
            </label>
            {{/each}}
        </div>
        <br>
        <div class="form-group">
            <label for="messageText">Pesan:</label>
            <textarea id="messageText" class="form-control" rows="4" required></textarea>
        </div>

        <div class="col-12">
            <label>Selected Person:</label>
            <ul id="selectedPersonsList"></ul> <!-- Placeholder for the list of selected persons -->
            <button id="unselectAllBtn" type="button" class="btn btn-warning mt-2">Unselect All</button>
        </div>
        <br>
        <button type="submit" class="btn btn-primary">Kirim Pesan</button>
        <br>
        <label id="submitInfo" style="display: none;"></label>
    </form>
</div>

<div class="content">
    <div class="table-responsive">
        <table id="chatDataTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th>Select</th> <!-- Checkbox header -->
                    <th>contactId</th>
                    <th>contactNumber</th>
                    {{!-- <th>contactPlatform</th> --}}
                    <th>contactStoredName</th>
                    <th>contactPicUrl</th>
                    <th>contactPublishedName</th>
                    <th>contactSavedName</th>
                    <th>isBusiness</th>
                    <th>isMyContact</th>
                    <th>type_1</th>
                    <th>type_2</th>
                    <th>type_3</th>
                    <th>contactAddress</th>
                    <th>contactRW</th>
                    <th>contactRT</th>
                    <th>note_1</th>
                    <th>note_2</th>
                    <th>contactGender</th>
                    <th>contactSebutan</th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>Select</th>
                    <th>contactId</th>
                    <th>contactNumber</th>
                    {{!-- <th>contactPlatform</th> --}}
                    <th>contactStoredName</th>
                    <th>contactPicUrl</th>
                    <th>contactPublishedName</th>
                    <th>contactSavedName</th>
                    <th>isBusiness</th>
                    <th>isMyContact</th>
                    <th>type_1</th>
                    <th>type_2</th>
                    <th>type_3</th>
                    <th>contactAddress</th>
                    <th>contactRW</th>
                    <th>contactRT</th>
                    <th>note_1</th>
                    <th>note_2</th>
                    <th>contactGender</th>
                    <th>contactSebutan</th>
                </tr>
            </tfoot>
            <tbody>
                {{#each contacts}}
                <tr>
                    <td><input type="checkbox" class="select-checkbox" data-id="{{contactId}}"
                            data-number="{{contactNumber}}" data-name="{{contactStoredName}}"
                            data-sebutan="{{contactSebutan}}" data-business="{{isBusiness}}"
                            data-mycontact="{{isMyContact}}" data-type1="{{type_1}}" data-type2="{{type_2}}"
                            data-type3="{{type_3}}" data-address="{{contactAddress}}" data-rw="{{contactRW}}"
                            data-rt="{{contactRT}}" data-note1="{{note_1}}" data-note2="{{note_2}}"
                            data-gender="{{contactGender}}"></td>
                    <td>{{contactId}}</td>
                    <td>{{contactNumber}}</td>
                    {{!-- <td>{{contactPlatform}}</td> --}}
                    <td>{{contactStoredName}}</td>
                    <td><img src="{{contactPicUrl}}" alt="Profile Picture" style="width:50px;height:50px;"></td>
                    <td>{{contactPublishedName}}</td>
                    <td>{{contactSavedName}}</td>
                    <td>{{isBusiness}}</td>
                    <td>{{isMyContact}}</td>
                    <td>{{type_1}}</td>
                    <td>{{type_2}}</td>
                    <td>{{type_3}}</td>
                    <td>{{contactAddress}}</td>
                    <td>{{contactRW}}</td>
                    <td>{{contactRT}}</td>
                    <td>{{note_1}}</td>
                    <td>{{note_2}}</td>
                    <td>{{contactGender}}</td>
                    <td>{{contactSebutan}}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>

<script src="js/jquery.min.js"></script>
<script src="js/bs-datatable.js"></script>

<script>
    jQuery(document).ready(function () {
        jQuery('#chatDataTable').dataTable();
    });

    document.addEventListener('DOMContentLoaded', function () {
        const selectedList = document.getElementById('selectedPersonsList');
        const unselectAllBtn = document.getElementById('unselectAllBtn');

        const updateSelectedList = () => {
            selectedList.innerHTML = ''; // Clear the list
            const checkboxes = document.querySelectorAll('.select-checkbox:checked');
            checkboxes.forEach((checkbox, index) => {
                const name = checkbox.getAttribute('data-name');
                const listItem = document.createElement('li');
                listItem.textContent = `${index + 1}. ${name}`; // Create list item with the name
                selectedList.appendChild(listItem); // Add the list item to the list
            });
        };

        const checkboxes = document.querySelectorAll('.select-checkbox');
        if (checkboxes) {
            checkboxes.forEach((checkbox) => {
                checkbox.addEventListener('change', updateSelectedList);
            });
        }

        unselectAllBtn.addEventListener('click', () => {
            checkboxes.forEach((checkbox) => {
                checkbox.checked = false;
            });
            updateSelectedList();
        });

        document.querySelectorAll('input[name="list-group-radio"]').forEach(radio => {
            radio.addEventListener('change', async function () {
                const templateName = this.value;
                try {
                    const response = await fetch(`/api/get-template/${templateName}`);
                    const template = await response.json();
                    if (template.success) {
                        document.getElementById('messageText').value = template.data.templateContent;
                    } else {
                        alert('Failed to fetch template details');
                    }
                } catch (error) {
                    console.error('Error fetching template details:', error);
                    alert('Error fetching template details');
                }
            });
        });

        document.getElementById('broadcastForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            const broadcastNama = document.getElementById('broadcastNama').value;
            const messageText = document.getElementById('messageText').value;
            const checkboxes = document.querySelectorAll('.select-checkbox:checked');

            const recipients = Array.from(checkboxes).map(checkbox => ({
                contactNumber: checkbox.getAttribute('data-number'),
                contactStoredName: checkbox.getAttribute('data-name'),
                contactSebutan: checkbox.getAttribute('data-sebutan'),
                isBusiness: checkbox.getAttribute('data-business'),
                isMyContact: checkbox.getAttribute('data-mycontact'),
                type_1: checkbox.getAttribute('data-type1'),
                type_2: checkbox.getAttribute('data-type2'),
                type_3: checkbox.getAttribute('data-type3'),
                contactAddress: checkbox.getAttribute('data-address'),
                contactRW: checkbox.getAttribute('data-rw'),
                contactRT: checkbox.getAttribute('data-rt'),
                note_1: checkbox.getAttribute('data-note1'),
                note_2: checkbox.getAttribute('data-note2'),
                contactGender: checkbox.getAttribute('data-gender')
            }));

            if (recipients.length === 0) {
                alert('Please select at least one contact');
                return;
            }

            const data = {
                broadcastNama,
                message: messageText,
                recipients
            };

            try {
                const response = await fetch('/api/send-individual-messages', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                const result = await response.json();
                console.log('Response:', result);

                // Show the submit info message
                const submitInfo = document.getElementById('submitInfo');
                submitInfo.textContent = 'Pesan Broadcast Dieksekusi';
                submitInfo.style.display = 'block';

                // Hide the submit info message after 5 seconds
                setTimeout(function () {
                    submitInfo.style.display = 'none';
                }, 5000);
            } catch (error) {
                console.error('Error sending individual messages:', error);
            }
        });
    });
</script>